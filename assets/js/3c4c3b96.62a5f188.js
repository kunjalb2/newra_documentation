"use strict";(self.webpackChunknewra=self.webpackChunknewra||[]).push([[360],{898:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var t=s(4848),a=s(8453);const r={sidebar_position:7},o="TrainDataSourceJob",i={id:"knowledgebases/datasources/jobs/TrainDataSourceJob",title:"TrainDataSourceJob",description:"Route Directory",source:"@site/docs/knowledgebases/datasources/jobs/TrainDataSourceJob.md",sourceDirName:"knowledgebases/datasources/jobs",slug:"/knowledgebases/datasources/jobs/TrainDataSourceJob",permalink:"/newra_documentation/docs/knowledgebases/datasources/jobs/TrainDataSourceJob",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/knowledgebases/datasources/jobs/TrainDataSourceJob.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"WebScrappingJob",permalink:"/newra_documentation/docs/knowledgebases/datasources/jobs/WebscrapingJob"},next:{title:"listing",permalink:"/newra_documentation/docs/knowledgebases/datasources/listing"}},c={},d=[{value:"Route Directory",id:"route-directory",level:2},{value:"Code Explanation",id:"code-explanation",level:2},{value:"Function Details",id:"function-details",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"traindatasourcejob",children:"TrainDataSourceJob"}),"\n",(0,t.jsx)(n.h2,{id:"route-directory",children:"Route Directory"}),"\n",(0,t.jsx)(n.p,{children:"Paths related to this job class will follow nothing specific as it's a job which can by definition be dispatched from anywhere in the Laravel application."}),"\n",(0,t.jsx)(n.h2,{id:"code-explanation",children:"Code Explanation"}),"\n",(0,t.jsxs)(n.p,{children:["This Laravel Job is designed around managing the training of data sources after they have been saved in ",(0,t.jsx)(n.code,{children:"TextScrappingController"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"function-details",children:"Function Details"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"construct(array $datasourceIds, User $user):"})}),"\n",(0,t.jsxs)(n.p,{children:["When a new instance of this job is created, the constructor receives an array of datasource IDs and a user instance. It initializes the ",(0,t.jsx)(n.code,{children:"DataSyncService"})," and assigns the ID array and the user to properties for later use."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"handle():"})}),"\n",(0,t.jsx)(n.p,{children:"This method is the core of the job and is responsible for processing the datasource training. It systematically:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Prepares crawler data which includes information on the module name, user ID, and event type."}),"\n",(0,t.jsx)(n.li,{children:"Chunks the list of datasources into groups of 20. This can be modified for efficiency based on hardware capabilities and requirements."}),"\n",(0,t.jsxs)(n.li,{children:["Iterates over these chunks, and for each datasource, it changes their status to 'training_requested' and saves them. It then generates a vector request for each datasource and sends the vector request to the ",(0,t.jsx)(n.code,{children:"DataSyncService"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Checks the active subscription for the user and retrieves the remaining storage tokens this user has left on their subscription."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"getRemainingStorageToken($subscription):"})}),"\n",(0,t.jsx)(n.p,{children:"A private helper method to calculate the remaining storage tokens, if the user has an active subscription. Returns the number of storage tokens the user has left."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["In summary, the ",(0,t.jsx)(n.code,{children:"TrainDataSourceJob"})," job primarily handles the queueable task of setting up data sources for training. This involves checking the users' remaining storage tokens and preparing and sending vector requests to the ",(0,t.jsx)(n.code,{children:"DataSyncService"})," for each valid datasource. The job is designed to systematically process requests for efficient usage of resources."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var t=s(6540);const a={},r=t.createContext(a);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);