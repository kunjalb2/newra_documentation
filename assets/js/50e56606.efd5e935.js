"use strict";(self.webpackChunknewra=self.webpackChunknewra||[]).push([[136],{8677:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>t,metadata:()=>a,toc:()=>r});var i=s(4848),o=s(8453);const t={sidebar_position:5},l=void 0,a={id:"knowledgebases/Logs",title:"Logs",description:"The Log Listing Page provides a centralized interface for viewing and managing all logs within a specific Knowledge Base. The following technical flow outlines how this is accomplished:",source:"@site/docs/knowledgebases/Logs.md",sourceDirName:"knowledgebases",slug:"/knowledgebases/Logs",permalink:"/newra_documentation/docs/knowledgebases/Logs",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/knowledgebases/Logs.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Playground",permalink:"/newra_documentation/docs/knowledgebases/Playground"},next:{title:"Settings",permalink:"/newra_documentation/docs/knowledgebases/Settings"}},c={},r=[{value:"Fetching Log Categories",id:"fetching-log-categories",level:3},{value:"Fetching Logs by Category",id:"fetching-logs-by-category",level:3},{value:"Log Actions",id:"log-actions",level:3},{value:"Data Storage",id:"data-storage",level:3}];function d(e){const n={code:"code",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"The Log Listing Page provides a centralized interface for viewing and managing all logs within a specific Knowledge Base. The following technical flow outlines how this is accomplished:"}),"\n",(0,i.jsx)(n.h3,{id:"fetching-log-categories",children:"Fetching Log Categories"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"API Call for Log Categories"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Initially, an API call is made to the ",(0,i.jsx)(n.code,{children:"getKnowledgebaseCategoryLog"})," function in the ",(0,i.jsx)(n.code,{children:"DataSyncService"})," class."]}),"\n",(0,i.jsx)(n.li,{children:"This function retrieves all types of logs, which can include categories such as KnowledgeBase, App Playground, Public URL, Chat Widget, API, Integration, etc."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Display Log Categories"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The retrieved log categories are displayed on the Log Listing Page. Users can click on any log category to view specific logs."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"fetching-logs-by-category",children:"Fetching Logs by Category"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Category Selection"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["When a user clicks on a log category, an API call is made to the ",(0,i.jsx)(n.code,{children:"getKnowledgebaseLog"})," function in the ",(0,i.jsx)(n.code,{children:"DataSyncService"})," class."]}),"\n",(0,i.jsx)(n.li,{children:"This call retrieves all logs associated with the selected category."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Displaying Logs"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Once the logs are received, they are displayed using a jQuery DataTable."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"log-actions",children:"Log Actions"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Viewing Log Details"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Users can click on individual logs to view detailed conversation history, along with the context and other properties."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Deleting Logs"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Admin users have the capability to delete logs if necessary."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"data-storage",children:"Data Storage"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Logs are stored in MongoDB, which allows for efficient querying and management of log data."}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(6540);const o={},t=i.createContext(o);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);