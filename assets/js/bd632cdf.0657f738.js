"use strict";(self.webpackChunknewra=self.webpackChunknewra||[]).push([[875],{2317:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=n(4848),a=n(8453);const i={sidebar_position:3},r=void 0,o={id:"knowledgebases/datasources/listing",title:"listing",description:"Datasource Listing Page",source:"@site/docs/knowledgebases/datasources/listing.md",sourceDirName:"knowledgebases/datasources",slug:"/knowledgebases/datasources/listing",permalink:"/docs/knowledgebases/datasources/listing",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/knowledgebases/datasources/listing.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"TrainDataSourceJob",permalink:"/docs/knowledgebases/datasources/jobs/TrainDataSourceJob"},next:{title:"Playground",permalink:"/docs/knowledgebases/Playground"}},d={},c=[{value:"Datasource Listing Page",id:"datasource-listing-page",level:2},{value:"Fetching Datasources",id:"fetching-datasources",level:3},{value:"Datasource Actions",id:"datasource-actions",level:3},{value:"Adding a Datasource",id:"adding-a-datasource",level:3}];function l(e){const s={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"datasource-listing-page",children:"Datasource Listing Page"}),"\n",(0,t.jsx)(s.p,{children:"The Datasource Listing Page serves as a centralized interface for viewing and managing all Datasources within a specific Knowledge Base. The page enables users to perform actions such as viewing, editing, resyncing, reindexing, and deleting Datasources. Below are the technical steps and processes involved:"}),"\n",(0,t.jsx)(s.h3,{id:"fetching-datasources",children:"Fetching Datasources"}),"\n",(0,t.jsxs)(s.p,{children:["To retrieve all Datasources associated with a Knowledge Base, you can use the ",(0,t.jsx)(s.code,{children:"show"})," method from the ",(0,t.jsx)(s.code,{children:"Modules/KnowledgeBase/Http/Controllers/KnowledgeBaseController.php"}),". This controller leverages ",(0,t.jsx)(s.code,{children:"DatasourceDataGrid"})," to gather and structure the Datasources for the selected Knowledge Base."]}),"\n",(0,t.jsx)(s.h3,{id:"datasource-actions",children:"Datasource Actions"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"DatasourceDataGrid"})," provides an HTML table displaying the list of Datasources with the following available actions for each entry:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Edit"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Re-sync"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Re-index"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Delete"})}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"adding-a-datasource",children:"Adding a Datasource"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Data Extraction"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"When a Datasource of any type is added, the system first attempts to extract text from the source."}),"\n",(0,t.jsxs)(s.li,{children:["The extracted text is then uploaded to an S3 server, and the file path is stored in the database with a status set to ",(0,t.jsx)(s.code,{children:"success"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Training Request"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)(s.code,{children:"TrainDataSourceJob"})," is dispatched, which sends the data to the Node server."]}),"\n",(0,t.jsxs)(s.li,{children:["Before sending to the Node server, the job updates the status to ",(0,t.jsx)(s.code,{children:"training_requested"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Node Server Processing"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)(s.code,{children:"TrainDataSource"})," job is dispatched. The Node server processes this request."]}),"\n",(0,t.jsx)(s.li,{children:"Upon completion, an acknowledgment is sent back to our webhook."}),"\n",(0,t.jsxs)(s.li,{children:["The system then updates the status to ",(0,t.jsx)(s.code,{children:"trained"}),", indicating that the Datasource indexing is complete."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["With the status marked as ",(0,t.jsx)(s.code,{children:"trained"}),", the Datasource is now ready for interactions, such as chat, based on the data provided."]})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>o});var t=n(6540);const a={},i=t.createContext(a);function r(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);