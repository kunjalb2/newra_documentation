"use strict";(self.webpackChunknewra=self.webpackChunknewra||[]).push([[224],{6672:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var t=n(4848),i=n(8453);const r={sidebar_position:4},a="Sitemap",c={id:"knowledgebases/datasources/types/WebScrapping/Sitemap",title:"Sitemap",description:"Function Details",source:"@site/docs/knowledgebases/datasources/types/WebScrapping/Sitemap.md",sourceDirName:"knowledgebases/datasources/types/WebScrapping",slug:"/knowledgebases/datasources/types/WebScrapping/Sitemap",permalink:"/newra_documentation/docs/knowledgebases/datasources/types/WebScrapping/Sitemap",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/knowledgebases/datasources/types/WebScrapping/Sitemap.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Domain",permalink:"/newra_documentation/docs/knowledgebases/datasources/types/WebScrapping/Domain"},next:{title:"DatasourceService",permalink:"/newra_documentation/docs/knowledgebases/datasources/Service/DatasourceService"}},o={},d=[{value:"Function Details",id:"function-details",level:3},{value:"Important Variables Explained",id:"important-variables-explained",level:3},{value:"Core Logic",id:"core-logic",level:3}];function l(e){const s={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"sitemap",children:"Sitemap"}),"\n",(0,t.jsx)(s.h3,{id:"function-details",children:"Function Details"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"fetchSitemapUrl(Request $request)"}),": This method retrieves the sitemap via a URL from the request object, parses the XML, captures the URLs within the sitemap, and then returns these URLs in a JSON response."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"store(SitemapScrappingRequest $request)"}),": This function handles the storing of the sitemap scaping request. It triggers the sitemap scraping process based on the provided sitemap URLs in the request."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"important-variables-explained",children:"Important Variables Explained"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"$sitemapUrls"}),": Array of URLs attained from the request object and separated by commas."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"$knowledgeBaseId"}),": Retrieved from the request data. Likely used to link scrapping data to a particular knowledge base."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"$autoTrain"}),": A flag determining if the data should be trained automatically or not."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"$user"}),": Contains authenticated user data."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"$datasourceLimit"}),": Maximum limit of data sources for the user."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"$jobs"}),": Array of queued jobs. Each job is an instance of ",(0,t.jsx)(s.code,{children:"WebscrapingJob"}),", meant to process the web scraping task carried on each sitemap URL."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"$knowledgebase"})," and ",(0,t.jsx)(s.code,{children:"$datasourceCount"}),": Contains retrieved knowledge base details and the count of current data sources."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"$remainingJobsCount"}),": Total jobs that can still be handled based on the remaining data source limit."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"$subscription"})," and ",(0,t.jsx)(s.code,{children:"$remainingStorageToken"}),": Provides information regarding the user's active subscription and calculates the remaining storage tokens based on their subscription details."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"$storageTokenCacheKey"}),": A string created for caching purposes."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"core-logic",children:"Core Logic"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"store"})," method processes sitemap URLs provided in the request. It splits multiple URLs by commas, gets the KnowledgeBaseId, determines the autoTrain status, and recognizes the authenticated user initiating the request."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"It calculates the remaining jobs count by checking the user's current knowledge base data source count against their data source limit."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"It also computes the remaining storage tokens by checking the storage token limit and its usage values from the user's active subscription."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["The storage token information is cached using ",(0,t.jsx)(s.code,{children:"Cache::put"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"For each sitemap URL, a scraping job is created and it is added to a jobs collection."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"These job collections are added to the batch either by retrieving the previous batch or creating a new batch."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["After executing the batch jobs, if all the jobs have been processed successfully, the ",(0,t.jsx)(s.code,{children:"then()"})," function forgets the storage token cache key."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["If the request is last in the sequence (",(0,t.jsx)(s.code,{children:"$request->lastRequest"}),"), then removes the batch ID from the session."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Finally, a JSON response indicating success and a message is returned. If the process fails, the response will be handled somewhere else."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>c});var t=n(6540);const i={},r=t.createContext(i);function a(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);